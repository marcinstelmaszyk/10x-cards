name: Pull Request Checks

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    if: success()
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage

      - name: Generate coverage summary
        run: |
          echo "## Pull Request Check Status" > pr_comment.md
          echo "âœ… All checks have passed successfully!" >> pr_comment.md
          echo "" >> pr_comment.md
          echo "### Test Coverage Summary" >> pr_comment.md
          echo '```' >> pr_comment.md
          cat coverage/coverage-summary.json | jq -r '.total | "Lines: \(.lines.pct)%\nStatements: \(.statements.pct)%\nFunctions: \(.functions.pct)%\nBranches: \(.branches.pct)%"' >> pr_comment.md
          echo '```' >> pr_comment.md

      - name: Post comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const commentBody = fs.readFileSync('pr_comment.md', 'utf8');
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;

            github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: commentBody
            });
